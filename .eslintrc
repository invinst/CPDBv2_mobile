{
  "parser": "babel-eslint",
  "rules": {
    "indent": [
      2,
      2,
      {
        "SwitchCase": 1
      }
    ],
    "quotes": [
      2,
      "single"
    ],
    "linebreak-style": [
      2,
      "unix"
    ],
    "semi": [
      2,
      "always"
    ],
    "babel/semi": [
      2,
      "always"
    ],
    "no-unused-vars": [
      2,
      {
        "args": "none",
        "varsIgnorePattern": "^React$"
      }
    ],
    "no-multi-spaces": [
      2
    ],
    "max-len": [
      2,
      120,
      2
    ],
    "jsx-quotes": [
      2,
      "prefer-single"
    ],
    "camelcase": [
      2,
      {
        "properties": "always"
      }
    ],
    "eol-last": [
      2
    ],
    "no-multiple-empty-lines": [
      2,
      {
        "max": 2,
        "maxEOF": 1
      }
    ],
    "no-trailing-spaces": [
      2
    ],
    "space-before-function-paren": [
      2,
      {
        "anonymous": "always",
        "named": "never"
      }
    ],
    "keyword-spacing": 2,
    "space-before-blocks": 2,
    "vars-on-top": 2,
    "comma-spacing": 2,
    "comma-dangle": [
      2,
      "always-multiline"
    ],
    "key-spacing": [
      2,
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    "react/jsx-boolean-value": [
      1,
      "always"
    ],
    "react/prefer-stateless-function": [
      2,
      { "ignorePureComponents": true }
    ],
    "react/jsx-curly-spacing": [
      2,
      "always"
    ],
    "react/jsx-equals-spacing": [
      2,
      "never"
    ],
    "react/jsx-indent-props": [
      1,
      2
    ],
    "react/jsx-indent": [
      1,
      2
    ],
    "react/jsx-key": 1,
    "react/jsx-no-duplicate-props": 1,
    "react/jsx-no-undef": 1,
    "react/jsx-pascal-case": 1,
    "react/jsx-uses-vars": 1,
    "react/no-danger": 1,
    "react/no-did-mount-set-state": 1,
    "react/no-did-update-set-state": 1,
    "react/no-direct-mutation-state": 1,
    "react/no-is-mounted": 1,
    "react/no-multi-comp": [
      1,
      {
        "ignoreStateless": true
      }
    ],
    "react/no-unknown-property": 1,
    "react/prop-types": 1,
    "react/react-in-jsx-scope": 1,
    "react/self-closing-comp": 1,
    "react/sort-comp": [
      1,
      {
        "groups": {
          "rendering": [
            "/^render.+$/",
            "render"
          ]
        }
      }
    ],
    "object-curly-spacing": [
      2,
      "always"
    ],
    "computed-property-spacing": [
      2,
      "never"
    ],
    "array-bracket-spacing": [
      2,
      "never"
    ],
    "mocha/handle-done-callback": 2,
    "mocha/max-top-level-suites": 0,
    "mocha/no-exclusive-tests": 2,
    "mocha/no-global-tests": 2,
    "mocha/no-hooks": 0,
    "mocha/no-hooks-for-single-case": 0,
    "mocha/no-identical-title": 2,
    "mocha/no-mocha-arrows": 2,
    "mocha/no-nested-tests": 2,
    "mocha/no-pending-tests": 2,
    "mocha/no-return-and-callback": 2,
    "mocha/no-setup-in-describe": 0,
    "mocha/no-sibling-hooks": 2,
    "mocha/no-skipped-tests": 1,
    "mocha/no-synchronous-tests": 0,
    "mocha/no-top-level-hooks": 2,
    "mocha/prefer-arrow-callback": 0,
    "mocha/valid-suite-description": 0,
    "mocha/valid-test-description": 0,
    "mocha/no-async-describe": 2,
    "no-console": [2, { "allow": ["warn", "error", "info"] }]
  },
  "overrides": [{
    "files": [ "integration-test/**/*.spec.js" ],
    "rules": {
      // mocha eslint has a bug when working with nightwatch
      // waiting for this issue https://github.com/lo1tuma/eslint-plugin-mocha/issues/205 to be handled
      "mocha/handle-done-callback": 0
    }
  }],
  "env": {
    "browser": true,
    "node": true,
    "jquery": true,
    "mocha": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "impliedStrict": true,
      "jsx": true,
      "experimentalObjectRestSpread": true
    }
  },
  "plugins": [
    "react",
    "babel",
    "mocha"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:mocha/recommended"
  ],
  "globals": {
    "L": true,
    "ga": true,
    "browser": false
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "linkComponents": [
      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      {"name": "Link", "linkAttribute": "to"}
    ]
  }
}
